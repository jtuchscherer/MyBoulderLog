<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- The Basics -->
    <groupId>org.myboulderlog</groupId>
    <artifactId>myboulderlog</artifactId>
    <version>1.0-SNAPSHOT</version>

    <packaging>war</packaging>

    <repositories>
        <repository>
            <id>google-maven-repo</id>
            <name>Google Maven Repository</name>
            <url>http://google-maven-repository.googlecode.com/svn/repository/</url>
        </repository>

        <repository>
            <id>objectify-appengine</id>
            <name>Objectify Maven Repository</name>
            <url>http://objectify-appengine.googlecode.com/svn/maven</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>maven-gwt-plugin</id>
            <name>Maven GWT</name>
            <url>https://nexus.codehaus.org/content/repositories/orgcodehausmojo-047/</url>
        </pluginRepository>
        <pluginRepository>
            <id>maven-gae-plugin-repo</id>
            <name>Maven Google App Engine Repository</name>
            <url>http://maven-gae-plugin.googlecode.com/svn/repository/</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!--
        jars from GAE's "lib/user" must be added as compile-time dependencies,
        as described here in "Copying JARs" section:
        http://code.google.com/appengine/docs/java/tools/ant.html
        -->

        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>${gae.version}</version>
        </dependency>

        <!--
        J2EE Servlet API. We need it to compile IndexServlet class.
        You can probably remove it, if you don't explicitly use Servlets.
        -->
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-servlet_2.5_spec</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.googlecode.objectify</groupId>
            <artifactId>objectify</artifactId>
            <version>2.2.2</version>
        </dependency>

        <!--  GWT dependencies (from central repo) -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${gwt.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwt.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--  Guice dependencies (from google repo) -->
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-servlet</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.gwt.inject</groupId>
            <artifactId>gin</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- Gwt command/dispatch dependency -->
        <dependency>
            <groupId>net.customware.gwt.dispatch</groupId>
            <artifactId>gwt-dispatch</artifactId>
            <version>1.1.0</version>
        </dependency>

        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20090211</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.0.2.GA</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-impl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--
        These dependencies are here just for enabling logging.
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.1</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>0.9.27</version>
        </dependency>

        <!-- Test scope -->
        <dependency>
          <groupId>org.testng</groupId>
          <artifactId>testng</artifactId>
          <version>5.14</version>
          <scope>test</scope>
        </dependency>


        <!--
        GAE libraries for local testing as described here:
        http://code.google.com/appengine/docs/java/howto/unittesting.html
        -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-labs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <directory>${project.basedir}/target</directory>
        <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/WEB-INF/classes
        </outputDirectory>
        <extensions>
            <extension>
                <groupId>org.apache.maven.archetype</groupId>
                <artifactId>archetype-packaging</artifactId>
                <version>2.0-alpha-5</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>2.1.0-1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <runTarget>org.myboulderlog.Application/Application.html</runTarget>
                </configuration>
            </plugin>
            <!--
          If you want to use the target/web.xml file mergewebxml produces,
          tell the war plugin to use it.
          Also, exclude what you want from the final artifact here.
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webXml>target/web.xml</webXml>
                    <warSourceExcludes>.gwt-tmp/**</warSourceExcludes>
                </configuration>
            </plugin>
            -->

            <plugin>
                <artifactId>maven-archetype-plugin</artifactId>
                <version>2.0-alpha-4</version>
                <extensions>true</extensions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1-beta-1</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>**/appengine-web.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <!--
            The actual maven-gae-plugin. Type "mvn gae:run" to run project,
            "mvn gae:deploy" to upload to GAE.
            -->
            <plugin>
                <groupId>net.kindleit</groupId>
                <artifactId>maven-gae-plugin</artifactId>
                <version>0.7.1</version>
            </plugin>

            <!--
            Upload application to the appspot automatically, during
            release:perform.
            -->
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <goals>gae:deploy</goals>
                </configuration>
            </plugin>

            <!--
            Java compiler version
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--
    Specify hard-coded project properties here.
    -->
    <properties>

        <!-- convenience to define GWT version in one place -->
        <gwt.version>2.1.1</gwt.version>

        <!--  tell the compiler we can use 1.5 -->
        <maven.compiler.source>1.5</maven.compiler.source>
        <maven.compiler.target>1.5</maven.compiler.target>

        <!--
        This is just for "eclipse:eclipse" goal to always attempt downloading
        sources.
        -->
        <downloadSources>true</downloadSources>

        <!--
        Specify AppEngine version for your project. It should match
        SDK version pointed to by ${gae.home} property (Typically, one used by your
        Eclipse plug-in).
        -->
        <gae.version>1.4.0</gae.version>

        <!--
        Upload to http://test.latest.<applicationName>.appspot.com by
        default.
        -->
        <gae.application.version>test</gae.application.version>
    </properties>

    <profiles>
        <!--
        We can configure our integration server to activate this profile
        and perform gae:deploy, thus uploading latest snapshot to the
        http://1.latest.<applicationName>.appspot.com automatically.
        -->
        <profile>
            <id>integration-build</id>
            <properties>
                <gae.application.version>stage</gae.application.version>
            </properties>
        </profile>

        <!--
        This profile will activate automatically during release and
        upload application to the http://2.latest.<applicationName>.appspot.com (We
        might want to set the 2nd version as our applications Default version to
        be accessible at http://<applicationName>.appspot.com).
        -->
        <profile>
            <id>release-build</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>

            <properties>
                <!--
                During release, set application version in appengine-web.xml
                to 2.
                -->
                <gae.application.version>release</gae.application.version>
            </properties>
        </profile>
    </profiles>

</project>
